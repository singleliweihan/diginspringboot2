<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.digin.springboot2</groupId>
    <artifactId>diginspringboot2</artifactId>
    <version>1.0.0</version>
    <!--    通过指定父工程为springboot使maven项目成为springboot项目-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.2.RELEASE</version>
    </parent>
    <properties>
        <couchbase-client.version>3.0.6</couchbase-client.version>
        <db2-jdbc.version>11.5.4.0</db2-jdbc.version>
    </properties>
    <dependencies>
        <!--        进行web场景开发需要用到的包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--版本控制问题-mvn支持就近原则,直接在当前文件的properties中声明需要的
                        key(<这里的>)需要通过父项目的父项目(spring-boot-dependencies)中的properties里面查找-->
        </dependency>
    </dependencies>

    <build>
        <!--        简化部署,直接在lifecycle中先clean,然后package,
        得到target中的jar包,可直接运行

        注意:运行的时候要取消cmd的快速编辑模式(属性-编辑选项-快速编辑),否则可能导致卡住-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>